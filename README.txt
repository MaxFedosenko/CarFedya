Для старта или тестирования данного приложения Вам понадобится какая нибудь база данных.
В своем приложении я использовал PostgreSQL. Можете использовать любую другую базу данных,
но для этого небходимо добавить нужную зависимость для работы с Вашей базой данных в мое
приложение. Делается это при помощи изменения файла pom.xml. Все существующие зависимости
можно найти на ресурсе https://mvnrepository.com/. Нужно ввести в строке поиска лишь название
Вашей базы данных, открыть какой-нибудь результат поиска(например один из первых), выбрать из
таблицы нужную версию(например одну из последних) и в появившейся таблице во вкладке maven
скопировать появившуюся зависимость. Затем нужно найти в корне данного проета файл pom.xml.
В теге <dependencies> в любом месте между другими зависимостями вставить скопированную Вами
зависимость и одновить настройки maven (обычно высвечивается маленькое окошко с круговыми
стрелочками). Готово. Ваша зависимость подключена. Затем нам необходимо указать нашему проету
как работать с Вашей базой данных. Нужно найти файл с именем application.properties. Он лежит в
папке resources. Там есть проперти для подключения к базе данных. Нужно указать драйвер, url
по которому обращаться к Вашей базе данных, Ваш username и password в этой базе данных, выбрать
необходимый диалект. Остальное можно оставить как есть. Можете поставить на свою машину базу
данных PostgreSQL, тогда почти ничего менять не придется. Только url, username и password.

Далее в папке resources есть файл testDB.sql. Это скрипт для добавления тестовых данных, который
нужен если хотите протестировать данное приложение. Перед тем как наполнять Вашу данных какими-то
данными, перейдите снова в файл application.properties и поменяйте значение update на create-drop
в проперти "spring.jpa.hibernate.ddl-auto" после знака "равно". Затем запустите приложение из
главного класса приложения. Он называется CarFedyaApplication. Когда приложение запустится, то в
Вашей базе данных будут созданы все необходимые таблицы и можно будет наполнить их тестовыми
данными из файла testDB.sql. Нужно просто скопировать команды их этого файла в скрипт Вашей базы
данных и выпонить их. Затем можно поменять значение ранее измененной проперти с create-drop снова
на update. Это нужно для того, чтобы при перезапуске приложения таблицы не удалялить и делались
новые, а просто обновллись если были внесены какие-либо изменения.

Вот и все. После всех этих манипуляций можно пользоваться приложением. Для этого достаточно перейти
в Ваш браузер и в строке для url ввести следующее: 127.0.0.1:8888/. Если все хорошо, то Вы попадете
на главную страницу приложения.